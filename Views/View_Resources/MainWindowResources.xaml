<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:FirmaMeble.ViewModels"
                    xmlns:views="clr-namespace:FirmaMeble.Views"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate />
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter
                            DockPanel.Dock="Top"
                            ContentSource="Header"
                            ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        <ContentPresenter
                            ContentSource="Content"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="13">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="HotPink" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!-- Styl dla DataGrid -->
    <Style TargetType="{x:Type DataGrid}" x:Key="DataGridDefaultStyle">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="RowBackground" Value="#ff668f" />
        <Setter Property="AlternatingRowBackground" Value="#ffe394" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalGridLinesBrush" Value="LightPink" />
        <Setter Property="VerticalGridLinesBrush" Value="Gray" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ColumnHeaderStyle"
                Value="{DynamicResource ColorfulDataGridColumnHeaderStyle}" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Direction="-90" Opacity="1" ShadowDepth="4" Color="#FF1C1C1C" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Styl dla DataGridTextColumn -->
    <Style TargetType="{x:Type DataGridTextColumn}" x:Key="DataGridTextColumnDefaultStyle">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />

    </Style>

    <Style x:Key="ColorfulDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#f0e854" />
        <Setter Property="Foreground" Value="#363231" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="35" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="SeparatorBrush" Value="#FF78909C" />
        <Setter Property="SeparatorVisibility" Value="Visible" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Direction="-90" Opacity="1" ShadowDepth="4" Color="#FF1C1C1C" />
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ControlMenuForJeden">
        <Grid>
            <Grid.Resources>
                <ResourceDictionary Source="/Views/View_Resources/StyleZakladekDictionary.xaml" />
            </Grid.Resources>
            <ToolBar Style="{StaticResource ToolBarStandardowy}">
                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                <Button Command="{Binding SaveAndClearFormCommand}">
                    <Image Style="{StaticResource ImageToolBarStandardowy}"
                           ToolTip="Zapisz i Wyczyść formularz"
                           Source="/Resources/Icons/contract-plus.png" />
                </Button>
                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                <Button Command="{Binding SaveAndCloseCommand}">
                    <Image Style="{StaticResource ImageToolBarStandardowy}"
                           ToolTip="Zapisz i Zamknij kartę"
                           Source="/Resources/Icons/save.png" />
                </Button>
                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                <Button Command="{Binding ClearEntireFormCommand}"
                        ToolTip="Wyczyść formularz">
                    <Image Style="{StaticResource ImageToolBarStandardowy}"
                           Source="/Resources/Icons/summarize.png" />
                </Button>
                <Separator />
                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                <Button Command="{Binding CloseCommand}"
                        ToolTip="Zamknij kartę">
                    <Image Style="{StaticResource ImageToolBarStandardowy}"
                           Source="/Resources/Icons/cancel.png" />
                </Button>
            </ToolBar>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ControlMenuForWszystkie">
        <Grid>
            <Grid.Resources>
                <ResourceDictionary Source="/Views/View_Resources/StyleZakladekDictionary.xaml" />
            </Grid.Resources>

            <ToolBar VerticalAlignment="Top" Style="{StaticResource ToolBarStandardowy}">
                <ToolBar.Resources>
                    <Style TargetType="{x:Type ToolBarPanel}">
                        <Setter Property="Orientation" Value="Vertical" />
                    </Style>
                </ToolBar.Resources>

                <DockPanel>
                    <ToolBarPanel Orientation="Horizontal">
                        <Button Command="{Binding RefreshCommand}"
                                Margin="5,2"
                                ToolTip="Odśwież dane">
                            <Image Style="{StaticResource ImageToolBarStandardowy}"
                                   Source="/Resources/Icons/refresh.png" />
                        </Button>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <Button Command="{Binding CloseCommand}"
                                Margin="5,2"
                                ToolTip="Zamknij kartę">
                            <Image Style="{StaticResource ImageToolBarStandardowy}"
                                   Source="/Resources/Icons/cancel.png" />
                        </Button>
                    </ToolBarPanel>
                    <Button HorizontalAlignment="Right"
                            DockPanel.Dock="Right"
                            Command="{Binding ToggleFiltrSortPanelCommand}"
                            ToolTip="Pokaż/Ukryj Filtrowanie i Sortowanie"
                            Background="Pink"
                            BorderBrush="DarkGray"
                            Foreground="DimGray"
                            BorderThickness="3"
                            Padding="5"
                            FontWeight="Bold"
                            Content="Filtrowanie i Sortowanie"
                            Cursor="Hand"
                            Style="{StaticResource RoundedButton}" />
                </DockPanel>
            </ToolBar>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FiltrSortPanel">
        <DockPanel Height="28" HorizontalAlignment="Stretch" Margin="2" Background="#FFE884B6">

            <Label Content="Create Date od:" />
            <DatePicker
                SelectedDate="{Binding Path=CreateDataForm, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
            <Label Content="Data do:" />
            <DatePicker
                SelectedDate="{Binding Path=CreateDataTo, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
            <Button Command="{Binding FireFiltrByDateCommand}"
                    ToolTip="Filtruj"
                    Background="LawnGreen"
                    BorderBrush="DarkGray"
                    Foreground="DimGray"
                    BorderThickness="3"
                    Padding="5"
                    Margin="5,0,10,0"
                    FontFamily="Cooper Black"
                    Content="Go!"
                    Cursor="Hand"
                    Style="{StaticResource RoundedButton}" />

            <Label Content="Szukaj Frazy:" Margin="15,0,0,0" />
            <TextBox Width="180" Margin="0,2" Text="{Binding SearchContext}" />

            <Button Command="{Binding FireFiltrByTextCommand}"
                    ToolTip="Filtruj"
                    Background="Yellow"
                    BorderBrush="DarkGray"
                    Foreground="DimGray"
                    BorderThickness="3"
                    Padding="5"
                    Margin="5,0,10,0"
                    FontFamily="Cooper Black"
                    Content="Go!"
                    Cursor="Hand"
                    Style="{StaticResource RoundedButton}" />

            <Label Content="Sortuj po:" Margin="100,0,0,0" />
            <ComboBox ItemsSource="{Binding SortBy}"
                      DisplayMemberPath="Value"
                      SelectedValuePath="Key"
                      SelectedItem="{Binding Path=SelectedSortBy, Mode=TwoWay, ValidatesOnDataErrors=True}" />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding DisplayAsideName}" Command="{Binding Path=Command}" Margin="6"
                            Padding="5" Background="LightBlue" BorderThickness="0" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button
                Command="{Binding Path=CloseCommand}"
                Content="X"
                Cursor="Hand"
                DockPanel.Dock="Right"
                Focusable="False"
                FontFamily="Courier"
                FontSize="9"
                FontWeight="Bold"
                Margin="0,1,0,0"
                Padding="0"
                VerticalContentAlignment="Bottom"
                Width="16" Height="16" />
            <ContentPresenter
                Content="{Binding Path=TabHeaderName}"
                VerticalAlignment="Center" />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl
            IsSynchronizedWithCurrentItem="True"
            ItemsSource="{Binding}"
            ItemTemplate="{StaticResource ClosableTabItemTemplate}"
            Margin="4"
            TabStripPlacement="Top" />
    </DataTemplate>

    <!--tu bedziemy laczyc View z ViewModel zakładek-->
    <DataTemplate DataType="{x:Type vm:NowyTowarViewModel}">
        <StackPanel>
            <ContentPresenter ContentTemplate="{StaticResource ControlMenuForJeden}" Content="{Binding}" />
            <views:NowyTowarView />
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyPracownikViewModel}">
        <StackPanel>
            <ContentPresenter ContentTemplate="{StaticResource ControlMenuForJeden}" Content="{Binding}" />
            <views:NowyPracownikView />
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaFakturaViewModel}">
        <StackPanel>
            <ContentPresenter ContentTemplate="{StaticResource ControlMenuForJeden}" Content="{Binding}" />
            <views:NowaFakturaView />
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieFakturyViewModel}">
        <StackPanel>
            <ContentPresenter ContentTemplate="{StaticResource ControlMenuForWszystkie}" Content="{Binding}" />
            <ContentPresenter ContentTemplate="{StaticResource FiltrSortPanel}"
                              Content="{Binding}"
                              Visibility="{Binding IsFiltrAndSortPanelVisible, 
                UpdateSourceTrigger=PropertyChanged,
                Converter={StaticResource BoolToVisibilityConverter}}" />
            <views:WszystkieFakturyView />
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieTowaryViewModel}">
        <StackPanel>
            <ContentPresenter ContentTemplate="{StaticResource ControlMenuForWszystkie}" Content="{Binding}" />
            <ContentPresenter ContentTemplate="{StaticResource FiltrSortPanel}"
                              Content="{Binding}"
                              Visibility="{Binding IsFiltrAndSortPanelVisible, 
                UpdateSourceTrigger=PropertyChanged, 
                Converter={StaticResource BoolToVisibilityConverter}}" />
            <views:WszystkieTowaryView />
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszyscyPracownicyViewModel}">
        <StackPanel>
            <ContentPresenter ContentTemplate="{StaticResource ControlMenuForWszystkie}" Content="{Binding}" />
            <ContentPresenter ContentTemplate="{StaticResource FiltrSortPanel}"
                              Content="{Binding}"
                              Visibility="{Binding IsFiltrAndSortPanelVisible,
                UpdateSourceTrigger=PropertyChanged, 
                Converter={StaticResource BoolToVisibilityConverter}}" />
            <views:WszyscyPracownicyView />
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:PracownicyUmowyViewModel}">
        <StackPanel>
            <ContentPresenter ContentTemplate="{StaticResource ControlMenuForWszystkie}" Content="{Binding}" />
            <views:UmowyPracownikow />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WszyscyKontrahenciViewModel}">
        <StackPanel>
            <ContentPresenter ContentTemplate="{StaticResource ControlMenuForWszystkie}" Content="{Binding}" />
            <ContentPresenter ContentTemplate="{StaticResource FiltrSortPanel}"
                              Content="{Binding}"
                              Visibility="{Binding IsFiltrAndSortPanelVisible,
                UpdateSourceTrigger=PropertyChanged, 
                Converter={StaticResource BoolToVisibilityConverter}}" />
            <views:WszyscyKontrahenciView />
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyKontrahentViewModel}">
        <StackPanel>
            <ContentPresenter ContentTemplate="{StaticResource ControlMenuForJeden}" Content="{Binding}" />
            <views:NowyKontrahentView />
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:StatystykaViewModel}">
        <StackPanel>
            <views:StatystykaView />
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>